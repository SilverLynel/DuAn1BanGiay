/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import domain_model.GiayCT;
import domain_model.HoaDon;
import domain_model.HoaDonChiTiet;
import domain_model.KhachHang;
import domain_model.NhanVien;

import java.awt.event.MouseEvent;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import repository.GiayCTBanHangRepository;
import repository.HoaDonCTRepository;
import repository.HoaDonRepository;
import repository.IHoaDonCTRepository;
import repository.IHoaDonRepository;
import repository.IGiayCTBanHangRepository;
import repository.KhuyenMaiRepo;
import repository.KhuyenMaiRepoImpl;

/**
 * @author PhiLT
 */
public class pnBanHang extends javax.swing.JPanel {

    //MessagePane MSG = new MessagePane();
    private SimpleDateFormat dfm = new SimpleDateFormat("dd-MM-yyyy");
    int idHoaDon = -1;
    private List<HoaDon> listHoaDon = new ArrayList<>();
    private List<HoaDonChiTiet> listHDCT = new ArrayList<>();
    private List<GiayCT> listGiay = new ArrayList<>();

    private IHoaDonRepository IHDRepo = new HoaDonRepository();
    private IHoaDonCTRepository IHDCT = new HoaDonCTRepository();
    private IGiayCTBanHangRepository iGiayRepo = new GiayCTBanHangRepository();
    private KhuyenMaiRepo khuyenMaiRepo = new KhuyenMaiRepoImpl();

    private DefaultTableModel modelTBHDCT;
    private DefaultTableModel modelTBHoaDon;
    private DefaultTableModel modelTBSanPham;

    public pnBanHang(ManHinh_11 manHinh_11) {
        initComponents();
        modelTBHDCT = (DefaultTableModel) tbHDCT.getModel();
        modelTBHoaDon = (DefaultTableModel) tbHoaDon.getModel();
        modelTBSanPham = (DefaultTableModel) tbSanPham.getModel();

        manHinh = manHinh_11;

        loadTableHoaDon();
        loadTableSanPham();

        loadCbbHoaDon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUpMenuTbHDCT = new javax.swing.JPopupMenu();
        editQuantityHDCT = new javax.swing.JMenuItem();
        deleteHDCT = new javax.swing.JMenuItem();
        popUpMenuTbSanPham = new javax.swing.JPopupMenu();
        add1ToBill = new javax.swing.JMenuItem();
        showDetail = new javax.swing.JMenuItem();
        popUpMenuTbHoaDon = new javax.swing.JPopupMenu();
        deleteHoaDon = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        txtTienKhachTra = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTenKhach = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtTienThua = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        btnThanhToanHD = new javax.swing.JButton();
        btnTaoHoaDon = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbHoaDon = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cbbTBHoaDon = new javax.swing.JComboBox<>();
        btnSuaDon = new javax.swing.JButton();
        btnQR = new javax.swing.JButton();
        btnChonKhach = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbSanPham = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbHDCT = new javax.swing.JTable();

        popUpMenuTbHDCT.setBackground(new java.awt.Color(153, 255, 255));
        popUpMenuTbHDCT.setPreferredSize(new java.awt.Dimension(200, 100));

        editQuantityHDCT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        editQuantityHDCT.setText("Sửa số lượng");
        editQuantityHDCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editQuantityHDCTActionPerformed(evt);
            }
        });
        popUpMenuTbHDCT.add(editQuantityHDCT);

        deleteHDCT.setBackground(new java.awt.Color(153, 255, 255));
        deleteHDCT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        deleteHDCT.setText("Xóa");
        deleteHDCT.setToolTipText("");
        deleteHDCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteHDCTActionPerformed(evt);
            }
        });
        popUpMenuTbHDCT.add(deleteHDCT);

        popUpMenuTbSanPham.setBackground(new java.awt.Color(255, 255, 255));
        popUpMenuTbSanPham.setPreferredSize(new java.awt.Dimension(200, 100));

        add1ToBill.setText("Nhặt hàng");
        add1ToBill.setPreferredSize(new java.awt.Dimension(200, 50));
        add1ToBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add1ToBillMouseClicked(evt);
            }
        });
        add1ToBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add1ToBillActionPerformed(evt);
            }
        });
        popUpMenuTbSanPham.add(add1ToBill);

        showDetail.setBackground(new java.awt.Color(255, 255, 255));
        showDetail.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        showDetail.setText("Xem chi tiết");
        showDetail.setToolTipText("");
        showDetail.setPreferredSize(new java.awt.Dimension(200, 50));
        showDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDetailActionPerformed(evt);
            }
        });
        popUpMenuTbSanPham.add(showDetail);

        popUpMenuTbHoaDon.setBackground(new java.awt.Color(255, 255, 255));
        popUpMenuTbHoaDon.setPreferredSize(new java.awt.Dimension(200, 50));

        deleteHoaDon.setText("Delete bill");
        deleteHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteHoaDonActionPerformed(evt);
            }
        });
        popUpMenuTbHoaDon.add(deleteHoaDon);

        setBackground(new java.awt.Color(255, 204, 204));
        setEnabled(false);
        setFocusable(false);
        setMaximumSize(new java.awt.Dimension(1322, 743));
        setPreferredSize(new java.awt.Dimension(1275, 790));
        setRequestFocusEnabled(false);
        setVerifyInputWhenFocusTarget(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Tên khách");

        jLabel3.setText("Tổng tiền");

        jLabel6.setText("SDT");

        jLabel8.setText("Thông tin hóa đơn");

        jLabel12.setText("Tiền khách trả");

        txtTienThua.setEditable(false);

        jLabel14.setText("Tiền thừa");

        txtTongTien.setEditable(false);
        txtTongTien.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTongTienCaretUpdate(evt);
            }
        });

        btnThanhToanHD.setText("Thanh toán");
        btnThanhToanHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanHDActionPerformed(evt);
            }
        });

        btnTaoHoaDon.setText("Tạo đơn");
        btnTaoHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHoaDonActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 204, 204));

        jScrollPane2.setBorder(null);

        tbHoaDon.setAutoCreateRowSorter(true);
        tbHoaDon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tbHoaDon.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "Mã", "Tên nhân viên", "Tên khách", "SDT", "Ngày thanh toán", "Tổng tiền", "Trạng thái"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tbHoaDon.setGridColor(new java.awt.Color(255, 255, 255));
        tbHoaDon.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tbHoaDon.setRowHeight(43);
        tbHoaDon.setSelectionBackground(new java.awt.Color(255, 204, 204));
        tbHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHoaDonMouseClicked(evt);
            }

            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbHoaDonMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tbHoaDon);

        jLabel10.setText("Tìm kiếm");

        cbbTBHoaDon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        cbbTBHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTBHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(cbbTBHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10)
                                        .addComponent(cbbTBHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnSuaDon.setText("Sửa đơn");
        btnSuaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaDonActionPerformed(evt);
            }
        });

        btnQR.setText("QR");
        btnQR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQRActionPerformed(evt);
            }
        });

        btnChonKhach.setText("Chọn khách");
        btnChonKhach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonKhachActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(39, 39, 39)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel1)
                                                                .addGap(47, 47, 47)
                                                                .addComponent(txtTenKhach, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel6)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel14)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(txtTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel3)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(24, 24, 24)
                                                                .addComponent(jLabel12)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(txtTienKhachTra, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(26, 26, 26)
                                                .addComponent(btnChonKhach)))
                                .addContainerGap(133, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnTaoHoaDon)
                                .addGap(31, 31, 31)
                                .addComponent(btnThanhToanHD)
                                .addGap(41, 41, 41)
                                .addComponent(btnSuaDon)
                                .addGap(44, 44, 44)
                                .addComponent(btnQR)
                                .addGap(53, 53, 53))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel6)
                                                .addComponent(txtTenKhach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(btnChonKhach)))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(txtTienKhachTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel12)
                                                .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel14)
                                        .addComponent(txtTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(155, 155, 155)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnThanhToanHD)
                                        .addComponent(btnTaoHoaDon)
                                        .addComponent(btnSuaDon)
                                        .addComponent(btnQR))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 60, 750, 840));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Quản lý bán hàng");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setText("Thông tin sản phẩm");

        jScrollPane4.setBorder(null);

        tbSanPham.setAutoCreateRowSorter(true);
        tbSanPham.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tbSanPham.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "Tên", "Loại", "Màu", "Size", "Nhãn hiệu", "Kiểu dáng", "Chiều cao đế", "Đơn giá", "Số lượng", "Giá giảm"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tbSanPham.setGridColor(new java.awt.Color(255, 255, 255));
        tbSanPham.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tbSanPham.setRowHeight(43);
        tbSanPham.setSelectionBackground(new java.awt.Color(255, 204, 204));
        tbSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbSanPhamMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(tbSanPham);

        jLabel2.setText("Tìm kiếm");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addGap(317, 317, 317)
                                                .addComponent(jLabel2)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField2))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                                .addContainerGap())
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 740, 440));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel11.setText("Hóa đơn chi tiết");

        jScrollPane3.setBorder(null);

        tbHDCT.setAutoCreateRowSorter(true);
        tbHDCT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tbHDCT.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "Tên SP", "Loại", "Màu", "Size", "Nhãn hiệu", "Số lượng", "Đơn giá"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tbHDCT.setGridColor(new java.awt.Color(255, 255, 255));
        tbHDCT.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tbHDCT.setRowHeight(43);
        tbHDCT.setSelectionBackground(new java.awt.Color(255, 204, 204));
        tbHDCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbHDCTMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tbHDCT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addGap(0, 649, Short.MAX_VALUE))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane3)))
                                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 740, 390));
    }// </editor-fold>//GEN-END:initComponents

    //load table
    private void loadTableHoaDon() {

        listHoaDon = IHDRepo.getAll();
        modelTBHoaDon.setRowCount(0);
        for (HoaDon hd : listHoaDon) {

            modelTBHoaDon.addRow(new Object[]{
                    hd.getMaHoaDon(),
                    hd.getNhanVien().getHoTenNhanVien(),
                    hd.getKhachHang() == null ? hd.getTenKhachHang() : hd.getKhachHang().getHoTen(),
                    hd.getSdtNguoiNhan(),
                    hd.getNgayThanhToan(),
                    hd.getTongTien(),
                    hd.isTrangThai() == true ? "Đã thanh toán" : "Chờ thanh toán"
            });
        }
        loadTableHoaDonCT(idHoaDon);
    }

    private void loadTableHoaDonCT(int idHD) {

        listHDCT = IHDCT.getAll(idHD);
        modelTBHDCT.setRowCount(0);
        for (HoaDonChiTiet hdct : listHDCT) {
            modelTBHDCT.addRow(new Object[]{
                    hdct.getGiayCT().getTenGiay(),
                    hdct.getGiayCT().getLoaiGiay().getTenLoai(),
                    hdct.getGiayCT().getMauSac().getTenMau(),
                    hdct.getGiayCT().getSize().getSize(),
                    hdct.getGiayCT().getNhanHieu().getTenNhanHieu(),
                    hdct.getSoLuong(),
                    hdct.getGiaBan()
            });
        }
    }

    private void loadTableSanPham() {
        listGiay = iGiayRepo.getAllGiayCT();
        modelTBSanPham.setRowCount(0);
        for (GiayCT x : listGiay) {
            modelTBSanPham.addRow(new Object[]{
                    x.getTenGiay(),
                    x.getLoaiGiay().getTenLoai(),
                    x.getMauSac().getTenMau(),
                    x.getSize().getSize(),
                    x.getNhanHieu().getTenNhanHieu(),
                    x.getKieuDang().getTenKieuDang(),
                    x.getDeGiay().getChieuCaoDe(),
                    x.getGiaBan(),
                    x.getSoLuongTon(),
                    khuyenMaiRepo.getOneGiayKMCaoNhat(x.getIdGiayCT()).isEmpty() ? "" : khuyenMaiRepo.getOneGiayKMCaoNhat(x.getIdGiayCT()).get(0).getGiaKM()
            });
        }
    }


    private void deleteHDCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteHDCTActionPerformed
        // TODO add your handling code here:

        int row = tbHDCT.getSelectedRow();
        String ten = tbHDCT.getValueAt(row, 0).toString();
        String loai = tbHDCT.getValueAt(row, 1).toString();
        String mau = tbHDCT.getValueAt(row, 2).toString();
        String sizeStr = tbHDCT.getValueAt(row, 3).toString();
        float size = Float.parseFloat(sizeStr);
        String nhanHieu = tbHDCT.getValueAt(row, 4).toString();
        int idHD = -1;
        int idGiay = -1;
        if (row != -1) {
            for (HoaDonChiTiet hdct : listHDCT) {
                if (hdct.getGiayCT().getTenGiay().equals(ten)
                        && hdct.getGiayCT().getLoaiGiay().getTenLoai().equals(loai)
                        && hdct.getGiayCT().getMauSac().getTenMau().equals(mau)
                        && hdct.getGiayCT().getSize().getSize() == size
                        && hdct.getGiayCT().getNhanHieu().getTenNhanHieu().equals(nhanHieu)) {
                    // System.out.println("Trang thai hoa don"+hdct.getHoaDon().isTrangThai());
                    if (hdct.getHoaDon().isTrangThai() == true) {
                        JOptionPane.showMessageDialog(this, "Hóa đơn đã thanh toán, không thể xóa");
                        return;
                    }
                    idHD = hdct.getIdHoaDon();
                    idGiay = hdct.getIdGiayCT();

                    updateQuantityBillDeleteSP(hdct.getGiayCT(), hdct.getSoLuong());

                }
            }
        }
        if (IHDCT.deleteHDCT(idHD, idGiay)) {
            JOptionPane.showMessageDialog(this, "Xóa thành công");
            loadTableHoaDonCT(idHD);
            updateTongTien();
        } else {
            JOptionPane.showMessageDialog(this, "Xóa thất bại");
        }
    }//GEN-LAST:event_deleteHDCTActionPerformed

    private void tbHDCTMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHDCTMouseReleased
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (evt.isPopupTrigger() && tbHDCT.getSelectedRowCount() != 0) {
                popUpMenuTbHDCT.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_tbHDCTMouseReleased

    private void tbSanPhamMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSanPhamMouseReleased
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (evt.isPopupTrigger() && tbSanPham.getSelectedRowCount() != 0) {
                popUpMenuTbSanPham.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_tbSanPhamMouseReleased

    private void tbHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHoaDonMouseClicked
        // TODO add your handling code here:
        listHoaDon = IHDRepo.getAll();
        int selectRow = tbHoaDon.getSelectedRow();
        String maHD = tbHoaDon.getValueAt(selectRow, 0).toString();
        for (HoaDon h : listHoaDon) {

            if (h.getMaHoaDon().equals(maHD)) {
                idHoaDon = h.getIdHoaDon();
                System.out.println("--->" + idHoaDon);
                loadTableHoaDonCT(h.getIdHoaDon());
                txtTenKhach.setText(h.getTenKhachHang());
                txtSDT.setText(h.getSdtNguoiNhan());
                txtTongTien.setText(h.getTongTien() + "");
            }
        }
    }//GEN-LAST:event_tbHoaDonMouseClicked

    private void btnTaoHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHoaDonActionPerformed
        // TODO add your handling code here:
        _khachHang = new KhachHang();

        HoaDon hd = createHoaDon();
        if (IHDRepo.addHoaDon(hd)) {
            JOptionPane.showMessageDialog(this, "Thêm hóa đơn thành công");
            loadTableHoaDon();
        } else {
            JOptionPane.showMessageDialog(this, "Thêm hóa đơn thất bại");
        }

    }//GEN-LAST:event_btnTaoHoaDonActionPerformed

    private void btnThanhToanHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanHDActionPerformed
        // TODO add your handling code here:
        String tongTienStr = txtTongTien.getText().trim();
        String tienKhachTraStr = txtTienKhachTra.getText().trim();
        BigDecimal tongTien = BigDecimal.valueOf(Float.parseFloat(tongTienStr));
        BigDecimal tienKhachTra = BigDecimal.valueOf(Float.parseFloat(tienKhachTraStr));
        BigDecimal tienThua = tienKhachTra.subtract(tongTien);
        if (Float.valueOf(tienThua + "") >= 0) {
            if (IHDRepo.thanhToanHD(idHoaDon)) {
                txtTienThua.setText(tienThua + "");
                JOptionPane.showMessageDialog(this, "Thanh toán thành công");

                loadTableHoaDon();
            } else {
                txtTienThua.setText(tienThua + "");
                JOptionPane.showMessageDialog(this, "Thanh toán thất bại");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Chưa đủ tiền thanh toán");
        }

    }//GEN-LAST:event_btnThanhToanHDActionPerformed

    GiayCT giayCTThemSoLuongVaoHoaDon;

    private void showDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDetailActionPerformed
        // TODO add your handling code here:
        giayCTThemSoLuongVaoHoaDon = new GiayCT();
        int row = tbSanPham.getSelectedRow();
        String ten = tbSanPham.getValueAt(row, 0).toString();
        String loai = tbSanPham.getValueAt(row, 1).toString();
        String mau = tbSanPham.getValueAt(row, 2).toString();
        String sizeStr = tbSanPham.getValueAt(row, 3).toString();
        String nhanHieu = tbSanPham.getValueAt(row, 4).toString();
        String kieuDang = tbSanPham.getValueAt(row, 5).toString();
        String chieuCaoDeStr = tbSanPham.getValueAt(row, 6).toString();
        float chieuCaoDe = Float.parseFloat(chieuCaoDeStr);
        float size = Float.parseFloat(sizeStr);
        if (row != -1) {
            for (GiayCT giay : listGiay) {
                if (giay.getTenGiay().equals(ten)
                        && giay.getLoaiGiay().getTenLoai().equals(loai)
                        && giay.getMauSac().getTenMau().equals(mau)
                        && giay.getSize().getSize() == size
                        && giay.getNhanHieu().getTenNhanHieu().equals(nhanHieu)
                        && giay.getKieuDang().getTenKieuDang().equals(kieuDang)
                        && giay.getDeGiay().getChieuCaoDe() == chieuCaoDe) {
                    showDetailGiayCT(giay);
                }
            }
        }


    }//GEN-LAST:event_showDetailActionPerformed

    private void add1ToBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add1ToBillMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_add1ToBillMouseClicked

    private void add1ToBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add1ToBillActionPerformed
        // TODO add your handling code here:
        HoaDonChiTiet hdct = new HoaDonChiTiet();
        int row = tbSanPham.getSelectedRow();
        String ten = tbSanPham.getValueAt(row, 0).toString();
        String loai = tbSanPham.getValueAt(row, 1).toString();
        String mau = tbSanPham.getValueAt(row, 2).toString();
        String sizeStr = tbSanPham.getValueAt(row, 3).toString();
        String nhanHieu = tbSanPham.getValueAt(row, 4).toString();
        String kieuDang = tbSanPham.getValueAt(row, 5).toString();
        String chieuCaoDeStr = tbSanPham.getValueAt(row, 6).toString();
        float chieuCaoDe = Float.parseFloat(chieuCaoDeStr);
        float size = Float.parseFloat(sizeStr);
        if (row != -1) {
            for (GiayCT giay : listGiay) {
                if (giay.getTenGiay().equals(ten)
                        && giay.getLoaiGiay().getTenLoai().equals(loai)
                        && giay.getMauSac().getTenMau().equals(mau)
                        && giay.getSize().getSize() == size
                        && giay.getNhanHieu().getTenNhanHieu().equals(nhanHieu)
                        && giay.getKieuDang().getTenKieuDang().equals(kieuDang)
                        && giay.getDeGiay().getChieuCaoDe() == chieuCaoDe) {
                    hdct = createHDCT(1, giay);
                }
            }
        }
        if (IHDCT.saveOrUpdate(hdct)) {
            JOptionPane.showMessageDialog(this, "Thêm thành công 1 sản phẩm");
            loadTableHoaDonCT(idHoaDon);
            updateTongTien();
        } else {
            JOptionPane.showMessageDialog(this, "Thêm thất bại");
        }
    }//GEN-LAST:event_add1ToBillActionPerformed

    private void editQuantityHDCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editQuantityHDCTActionPerformed
        // TODO add your handling code here:
        HoaDonChiTiet hdct = new HoaDonChiTiet();
        String slStr = JOptionPane.showInputDialog(this, "Mời bạn nhập số lượng");
        int sl = Integer.parseInt(slStr);
        int row = tbHDCT.getSelectedRow();
        String ten = tbHDCT.getValueAt(row, 0).toString();
        String loai = tbHDCT.getValueAt(row, 1).toString();
        String mau = tbHDCT.getValueAt(row, 2).toString();
        String sizeStr = tbHDCT.getValueAt(row, 3).toString();
        float size = Float.parseFloat(sizeStr);
        String nhanHieu = tbHDCT.getValueAt(row, 4).toString();

        int slThem = 0;

        if (row != -1) {
            for (HoaDonChiTiet h : listHDCT) {
                if (h.getGiayCT().getTenGiay().equals(ten)
                        && h.getGiayCT().getLoaiGiay().getTenLoai().equals(loai)
                        && h.getGiayCT().getMauSac().getTenMau().equals(mau)
                        && h.getGiayCT().getSize().getSize() == size
                        && h.getGiayCT().getNhanHieu().getTenNhanHieu().equals(nhanHieu)) {
                    if (h.getHoaDon().isTrangThai() == true) {
                        JOptionPane.showMessageDialog(this, "Hóa đơn đã thanh toán, không thể sửa");
                        return;
                    }
                    hdct.setIdGiayCT(h.getIdGiayCT());
                    hdct.setIdHoaDon(idHoaDon);
                    int slCu = h.getSoLuong();
                    slThem = sl - slCu;

                    if (updateQuantityBillAddSP(h.getGiayCT(), slThem) == false) {
                        return;
                    }

                    hdct.setSoLuong(sl);
                    hdct.setGiaBan(h.getGiaBan());
                }
            }
        }
        if (IHDCT.saveOrUpdate(hdct)) {
            JOptionPane.showMessageDialog(this, "Sửa thành công");
            loadTableHoaDonCT(idHoaDon);
            updateTongTien();
        } else {
            JOptionPane.showMessageDialog(this, "Sửa thất bại");
        }
    }//GEN-LAST:event_editQuantityHDCTActionPerformed

    private void txtTongTienCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTongTienCaretUpdate

    }//GEN-LAST:event_txtTongTienCaretUpdate

    private void tbHoaDonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHoaDonMouseReleased
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (evt.isPopupTrigger() && tbHoaDon.getSelectedRowCount() != 0) {
                popUpMenuTbHoaDon.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_tbHoaDonMouseReleased

    private void deleteHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteHoaDonActionPerformed
        // TODO add your handling code here:
        int row = tbHoaDon.getSelectedRow();
        if (row != -1) {
            HoaDon hd = new HoaDon();

            String trangThai = tbHoaDon.getValueAt(row, 6).toString();
            if (trangThai.equals("Đã thanh toán")) {
                JOptionPane.showMessageDialog(this, "Hóa đơn này không thể xóa!!");
                return;
            } else {
                String ma = tbHoaDon.getValueAt(row, 0).toString();
                for (HoaDon h : listHoaDon) {
                    if (ma.equals(h.getMaHoaDon())) {
                        //System.out.println("ID hóa đơn muốn xóa là:" + h.getIdHoaDon());
                        if (IHDRepo.huyHoaDon(h.getIdHoaDon())) {
                            for (HoaDonChiTiet hdct : listHDCT) {
                                updateQuantityBillDeleteSP(hdct.getGiayCT(), hdct.getSoLuong());
                            }
                            JOptionPane.showMessageDialog(this, "Xóa thành công");
                            loadTableHoaDon();
                        } else {
                            JOptionPane.showMessageDialog(this, "Xóa thất bại");
                        }
                    }
                }
            }

        }
    }//GEN-LAST:event_deleteHoaDonActionPerformed

    private void btnSuaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaDonActionPerformed
        // TODO add your handling code here:
        String tenKhach = txtTenKhach.getText().trim();
        String std = txtSDT.getText().trim();
        for (HoaDon h : listHoaDon) {
            if (h.getIdHoaDon() == idHoaDon) {
                h.setTenKhachHang(tenKhach);
                h.setSdtNguoiNhan(std);
                if (IHDRepo.updateThongTinHD(h)) {
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công");
                    loadTableHoaDon();
                    return;
                } else {
                    JOptionPane.showMessageDialog(this, "Cập nhật thất bại");
                    return;
                }
            }
        }
    }//GEN-LAST:event_btnSuaDonActionPerformed

    ReadQRCode _qr;

    private void btnQRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQRActionPerformed
        // TODO add your handling code here:
        _qr = new ReadQRCode(this);
        _qr.setVisible(true);
    }//GEN-LAST:event_btnQRActionPerformed

    //Combobox hóa đơn
    private DefaultComboBoxModel modelCbbHoaDon;

    private void loadCbbHoaDon() {
        modelCbbHoaDon = (DefaultComboBoxModel) cbbTBHoaDon.getModel();
        modelCbbHoaDon.removeAllElements();
        modelCbbHoaDon.addElement("Đã thanh toán");
        modelCbbHoaDon.addElement("Chờ thanh toán");
    }

    private void cbbTBHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTBHoaDonActionPerformed
        // TODO add your handling code here:
        if (cbbTBHoaDon.getSelectedIndex() == 0) {
            //System.out.println("Đã thanh toán");
            idHoaDon = -1;
            listHoaDon = IHDRepo.getAll();
            modelTBHoaDon.setRowCount(0);
            for (HoaDon hd : listHoaDon) {
                if (hd.isTrangThai() == true) {
                    modelTBHoaDon.addRow(new Object[]{
                            hd.getMaHoaDon(),
                            hd.getNhanVien().getHoTenNhanVien(),
                            hd.getKhachHang() == null ? hd.getTenKhachHang() : hd.getKhachHang().getHoTen(),
                            hd.getSdtNguoiNhan(),
                            hd.getNgayThanhToan(),
                            hd.getTongTien(),
                            hd.isTrangThai() == true ? "Đã thanh toán" : "Chờ thanh toán"
                    });
                }
            }
            loadTableHoaDonCT(idHoaDon);
        }
        if (cbbTBHoaDon.getSelectedIndex() == 1) {
            // System.out.println("Chờ thanh toán");
            idHoaDon = -1;
            listHoaDon = IHDRepo.getAll();
            modelTBHoaDon.setRowCount(0);
            for (HoaDon hd : listHoaDon) {
                if (hd.isTrangThai() == false) {
                    modelTBHoaDon.addRow(new Object[]{
                            hd.getMaHoaDon(),
                            hd.getNhanVien().getHoTenNhanVien(),
                            hd.getKhachHang() == null ? hd.getTenKhachHang() : hd.getKhachHang().getHoTen(),
                            hd.getSdtNguoiNhan(),
                            hd.getNgayThanhToan(),
                            hd.getTongTien(),
                            hd.isTrangThai() == true ? "Đã thanh toán" : "Chờ thanh toán"
                    });
                }
            }
            loadTableHoaDonCT(idHoaDon);
        }
    }//GEN-LAST:event_cbbTBHoaDonActionPerformed

    private void btnChonKhachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonKhachActionPerformed
        // TODO add your handling code here:
        // _khachHang = new KhachHang();

        frmChonKhach chonKhach = new frmChonKhach(this);
        chonKhach.setVisible(true);


    }//GEN-LAST:event_btnChonKhachActionPerformed


    private ManHinh_11 manHinh;

    //tao hoa don
    private HoaDon createHoaDon() {
        String tenKH = txtTenKhach.getText();
        String sdt = txtSDT.getText().trim();
        if (tenKH.trim().length() == 0) {
            tenKH = null;
        }
        BigDecimal tongTien = BigDecimal.valueOf(0);
        HoaDon hd = new HoaDon(genMaHoaDon(), manHinh.login(), tenKH, new Date(), tongTien, false, sdt);
//        hd.setMaHoaDon(genMaHoaDon());
//        hd.setNhanVien(login());
//        hd.setTenKhachHang(tenKH);
//        hd.setNgayTao(new Date());
//        hd.setTrangThai(0);
//        hd.setTongTien(BigDecimal.valueOf(0));
//        hd.setSdtNguoiNhan(sdt);
        System.out.println(genMaHoaDon());
        return hd;
    }

    private HoaDonChiTiet createHDCT(int soLuong, GiayCT giay) {
        BigDecimal giaKM = khuyenMaiRepo.getOneGiayKMCaoNhat(giay.getIdGiayCT()).isEmpty() ? new BigDecimal(0) : khuyenMaiRepo.getOneGiayKMCaoNhat(giay.getIdGiayCT()).get(0).getGiaKM();
        System.out.println("Giá km:" + giaKM);
        if (giaKM.compareTo(BigDecimal.valueOf(Double.parseDouble("0"))) > 0) {
            if (soLuong > 0) {
                for (HoaDonChiTiet hdct : listHDCT) {
                    if (giay.getIdGiayCT() == hdct.getIdGiayCT()) {
                        if (updateQuantityBillAddSP(giay, soLuong)) {
                            return new HoaDonChiTiet(idHoaDon, giay.getIdGiayCT(), hdct.getSoLuong() + soLuong, giaKM);
                        } else {
                            return null;
                        }
                    }
                }
            }
        } else {

            if (soLuong > 0) {
                for (HoaDonChiTiet hdct : listHDCT) {
                    if (giay.getIdGiayCT() == hdct.getIdGiayCT()) {
                        if (updateQuantityBillAddSP(giay, soLuong)) {
                            return new HoaDonChiTiet(idHoaDon, giay.getIdGiayCT(), hdct.getSoLuong() + soLuong, giay.getGiaBan());
                        } else {
                            return null;
                        }
                    }
                }
            }
        }
//        hd.setMaHoaDon(genMaHoaDon());
//        hd.setNhanVien(login());
//        hd.setTenKhachHang(tenKH);
//        hd.setNgayTao(new Date());
//        hd.setTrangThai(0);
//        hd.setTongTien(BigDecimal.valueOf(0));
//        hd.setSdtNguoiNhan(sdt);
        if (giaKM.compareTo(BigDecimal.valueOf(Double.parseDouble("0"))) > 0) {
            if (updateQuantityBillAddSP(giay, soLuong)) {
                return new HoaDonChiTiet(idHoaDon, giay.getIdGiayCT(), soLuong, giaKM);
            } else {
                return null;
            }
        } else {
            if (updateQuantityBillAddSP(giay, soLuong)) {
                return new HoaDonChiTiet(idHoaDon, giay.getIdGiayCT(), soLuong, giay.getGiaBan());
            } else {
                return null;
            }
        }
    }
    //gen mã hóa đơn

    private String genMaHoaDon() {
        int max = 0;
        String check;
        for (HoaDon hoaDon : listHoaDon) {
            check = hoaDon.getMaHoaDon().substring(2);
            if (Integer.parseInt(check) > max) {
                max = Integer.parseInt(check);
                //System.out.println("Mã hóa đơn="+check);
            }
        }
        max++;

        return "HD" + max;
    }
//cap nhat tong tien

    private void updateTongTien() {
        BigDecimal tongTien = BigDecimal.valueOf(0);
        BigDecimal count;
        for (HoaDonChiTiet hdct : listHDCT) {
            count = hdct.getGiaBan().multiply(BigDecimal.valueOf(hdct.getSoLuong()));
            tongTien = tongTien.add(count);
            txtTongTien.setText(tongTien + "");
            System.out.println("-->" + tongTien);
        }
        boolean check = IHDRepo.updateTongTienHD(tongTien, idHoaDon);
        loadTableHoaDon();
    }

    //lấy số lượng giày muốn mua từ frmShowChiTiet
    frmShowChiTietGiay frm;

    private void showDetailGiayCT(GiayCT giay) {
        frm = new frmShowChiTietGiay(this, giay);
        frm.setVisible(true);
        //System.out.println("-----------------------------------------");
        giayCTThemSoLuongVaoHoaDon = giay;
        _qr.closeQRView();
    }

    public void getQuantityGiayWantBuy(int sl) {
        if (sl + "".trim().length() == 0) {
            return;
        }
        if (sl > 0) {
            HoaDonChiTiet hdct = createHDCT(sl, giayCTThemSoLuongVaoHoaDon);
            if (hdct != null) {
                if (IHDCT.saveOrUpdate(hdct) == true) {
                    JOptionPane.showMessageDialog(this, "Thêm thành công sản phẩm");
                    loadTableHoaDonCT(idHoaDon);
                    updateTongTien();
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm thất bại");
                }
            } else {
                return;
            }
        }
    }

    //Cập nhật lại số lượng sản phẩm
    private boolean updateQuantityBillAddSP(GiayCT g, int slSPThem) {
        int slTon = g.getSoLuongTon() - slSPThem;
        //System.out.println("////" + slTon);
        if (slTon >= 0) {
            g.setSoLuongTon(slTon);
            if (iGiayRepo.updateGiay(g)) {
                //System.out.println("update sl giay them succesful");
                loadTableSanPham();
                return true;
            } else {
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Rất tiếc, không còn hàng");
            return false;
        }
    }

    private boolean updateQuantityBillDeleteSP(GiayCT g, int slSPBot) {
        int slTon = g.getSoLuongTon() + slSPBot;
        g.setSoLuongTon(slTon);
        if (iGiayRepo.updateGiay(g)) {
            //System.out.println("update sl giay them succesful");
            loadTableSanPham();
            return true;
        } else {
            return false;
        }
    }

    //lấy mã QR
    public void getQRCode(String qr) {
        for (GiayCT g : listGiay) {
            if (g.getMaGiayCT().equals(qr)) {
                showDetailGiayCT(g);
                return;
            }
        }
    }


    ///Lấy khách hàng from frmChonKhachHang
    private KhachHang _khachHang = new KhachHang();

    public void getKhachHang(KhachHang khachHang) {
        _khachHang = khachHang;

        if (_khachHang.getIdKhachHang() + "".length() > 0) {
            for (HoaDon h : listHoaDon) {
                if (h.getIdHoaDon() == idHoaDon) {
                    if (h.isTrangThai() == true) {
                        JOptionPane.showMessageDialog(this, "Hóa đơn đã thanh toán");
                        return;
                    }
                    h.setKhachHang(_khachHang);
                    System.out.println("----" + _khachHang.getDiaChi());
                    h.setTenKhachHang(_khachHang.getHoTen());
                    h.setSdtNguoiNhan(_khachHang.getSdt());
                    IHDRepo.updateThongTinHD(h);
                    loadTableHoaDon();
                    return;
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem add1ToBill;
    private javax.swing.JButton btnChonKhach;
    private javax.swing.JButton btnQR;
    private javax.swing.JButton btnSuaDon;
    private javax.swing.JButton btnTaoHoaDon;
    private javax.swing.JButton btnThanhToanHD;
    private javax.swing.JComboBox<String> cbbTBHoaDon;
    private javax.swing.JMenuItem deleteHDCT;
    private javax.swing.JMenuItem deleteHoaDon;
    private javax.swing.JMenuItem editQuantityHDCT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPopupMenu popUpMenuTbHDCT;
    private javax.swing.JPopupMenu popUpMenuTbHoaDon;
    private javax.swing.JPopupMenu popUpMenuTbSanPham;
    private javax.swing.JMenuItem showDetail;
    private javax.swing.JTable tbHDCT;
    private javax.swing.JTable tbHoaDon;
    private javax.swing.JTable tbSanPham;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenKhach;
    private javax.swing.JTextField txtTienKhachTra;
    private javax.swing.JTextField txtTienThua;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
